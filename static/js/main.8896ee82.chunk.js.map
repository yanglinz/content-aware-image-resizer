{"version":3,"sources":["components/CanvasImage.js","components/DisplayImages.js","components/Controls.js","index.js","lib.js"],"names":["loadCanvasImage","imageSrc","canvasElement","url","img","Image","crossOrigin","src","Promise","resolve","reject","onload","onerror","e","loadImage","then","width","height","ctx","getContext","drawImage","imageData","getImageData","console","log","CanvasImage","props","ref","useRef","useEffect","current","id","DisplayImages","currentDisplay","originalClassNames","targetClassNames","className","Controls","fn","handleResize","onClick","initialState","display","reducer","state","action","type","Error","App","useReducer","dispatch","source","document","getElementById","target","resizedWidth","resizedHeight","canvasElements","originalWidth","originalHeight","args","module","resize","catch","error","wasmResize","resizeImage","ReactDOM","render","readyState","addEventListener"],"mappings":"+MAiBA,SAASA,EAAgBC,EAAUC,IAfnC,SAAmBC,GACjB,IAAMC,EAAM,IAAIC,MAIhB,OAHAD,EAAIE,YAAc,YAClBF,EAAIG,IAAMJ,EAEH,IAAIK,SAAQ,SAACC,EAASC,GAC3BN,EAAIO,OAAS,WACXF,EAAQL,IAEVA,EAAIQ,QAAU,SAAUC,GACtBH,EAAOG,QAMXC,CAAUb,GAAUc,MAAK,SAACX,GAExBF,EAAcc,MAAQZ,EAAIY,MAC1Bd,EAAce,OAASb,EAAIa,OAE3B,IAAMC,EAAMhB,EAAciB,WAAW,MAErCD,EAAIE,UAAUhB,EAAK,EAAG,EAAGA,EAAIY,MAAOZ,EAAIa,OAAQ,EAAG,EAAGf,EAAcc,MAAOd,EAAce,QAEzF,IAAMI,EAAYH,EAAII,aAAa,EAAG,EAAGpB,EAAcc,MAAOd,EAAce,QAC5EM,QAAQC,IAAIH,MAgBDI,MAZf,SAAqBC,GACnB,IAAMC,EAAMC,YAAO,MAQnB,OANAC,aAAU,WACJF,GACF3B,EAAgB0B,EAAMnB,IAAKoB,EAAIG,WAEhC,CAACH,IAEG,wBAAQI,GAAIL,EAAMK,GAAIJ,IAAKA,KCpBrBK,MAnBf,SAAuBN,GACrB,IAAQO,EAAmBP,EAAnBO,eAEFC,EAAwC,WAAnBD,EAA8B,GAAK,SACxDE,EAAsC,WAAnBF,EAA8B,GAAK,SAE5D,OACE,sBAAKG,UAAU,4CAAf,UACE,qBAAKA,UAAWF,EAAhB,SACE,cAAC,EAAD,CAAaH,GAAG,gBAAgBxB,IAAKmB,EAAMnB,QAG7C,qBAAK6B,UAAWD,EAAhB,SACE,wBAAQJ,GAAG,wBCDJM,IC4CQC,ED5CRD,EAdf,SAAkBX,GAChB,IAAQa,EAAiBb,EAAjBa,aACR,OACE,qBAAKH,UAAU,WAAf,SACE,wBACEA,UAAU,uEACVI,QAASD,EAFX,8BCKAE,G,KAAe,CAAEC,QAAS,WAEhC,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,SACH,MAAO,CAAEJ,QAAS,UACpB,QACE,MAAM,IAAIK,MAAM,oCAItB,SAASC,IACP,MAA0BC,YAAWN,EAASF,GAA9C,mBAAOG,EAAP,KAAcM,EAAd,KAsBA,OACE,sBAAKd,UAAU,6BAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,2CAAf,SACE,cAAC,EAAD,CAAe7B,IALJ,kDAKqB0B,eAAgBW,EAAMF,cAI1D,qBAAKN,UAAU,yCAAf,SACE,cAAC,EAAD,CAAUG,aA7BhB,WACE,IAAMY,EAASC,SAASC,eAAe,iBACjCC,EAASF,SAASC,eAAe,iBACvCC,EAAOtC,MAAQmC,EAAOnC,MACtBsC,EAAOrC,OAASkC,EAAOlC,OAEvB,IAAMsC,EAAeJ,EAAOnC,MAAQ,EAC9BwC,EAAgBL,EAAOlC,QC9B1B,SACLwC,EACAC,EACAC,EACAJ,EACAC,GAEA,IAAQL,EAAmBM,EAAnBN,OAAQG,EAAWG,EAAXH,QAEhB,WAA8B,IAAD,uBAANM,EAAM,yBAANA,EAAM,gBAC3B,6BACG7C,MAAK,SAAC8C,GAAD,OAAYA,EAAOC,OAAP,MAAAD,EAAiBD,MAClCG,MAAMxC,QAAQyC,OASnBC,CAJkBd,EAAOhC,WAAW,MAClBmC,EAAOnC,WAAW,MAMlCuC,EACAC,EACAJ,EACAC,GDIAU,CACE,CAAEf,SAAQG,UACVH,EAAOnC,MACPmC,EAAOlC,OACPsC,EACAC,GAGFN,EAAS,CAAEJ,KAAM,mBAmBER,EAQT,WACZ6B,IAASC,OAAO,cAACpB,EAAD,IAASI,SAASC,eAAe,SARtB,WAAvBD,SAASiB,WACX/B,IAEAc,SAASkB,iBAAiB,mBAAoBhC,K","file":"static/js/main.8896ee82.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nfunction loadImage(url) {\n  const img = new Image();\n  img.crossOrigin = \"Anonymous\";\n  img.src = url;\n\n  return new Promise((resolve, reject) => {\n    img.onload = function () {\n      resolve(img);\n    };\n    img.onerror = function (e) {\n      reject(e);\n    };\n  });\n}\n\nfunction loadCanvasImage(imageSrc, canvasElement) {\n  loadImage(imageSrc).then((img) => {\n    // TODO: Think of high DPI screens / scale down heuristics\n    canvasElement.width = img.width;\n    canvasElement.height = img.height;\n\n    const ctx = canvasElement.getContext(\"2d\");\n    // prettier-ignore\n    ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvasElement.width, canvasElement.height);\n    // prettier-ignore\n    const imageData = ctx.getImageData(0, 0, canvasElement.width, canvasElement.height);\n    console.log(imageData);\n  });\n}\n\nfunction CanvasImage(props) {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (ref) {\n      loadCanvasImage(props.src, ref.current);\n    }\n  }, [ref]);\n\n  return <canvas id={props.id} ref={ref}></canvas>;\n}\n\nexport default CanvasImage;\n","import CanvasImage from \"./CanvasImage\";\n\nfunction DisplayImages(props) {\n  const { currentDisplay } = props;\n\n  const originalClassNames = currentDisplay === \"SOURCE\" ? \"\" : \"hidden\";\n  const targetClassNames = currentDisplay === \"TARGET\" ? \"\" : \"hidden\";\n\n  return (\n    <div className=\"border-8 border-gray-600 border-opacity-5\">\n      <div className={originalClassNames}>\n        <CanvasImage id=\"canvas-source\" src={props.src} />\n      </div>\n\n      <div className={targetClassNames}>\n        <canvas id=\"canvas-target\"></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayImages;\n","function Controls(props) {\n  const { handleResize } = props;\n  return (\n    <div className=\"Controls\">\n      <button\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        onClick={handleResize}\n      >\n        Resize to 50%\n      </button>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { resizeImage } from \"./lib\";\nimport DisplayImages from \"./components/DisplayImages\";\nimport Controls from \"./components/Controls\";\n\nimport \"./index.css\";\n\nconst initialState = { display: \"SOURCE\" };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"RESIZE\":\n      return { display: \"TARGET\" };\n    default:\n      throw new Error(\"Unknown action type in reducer.\");\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  function handleResize() {\n    const source = document.getElementById(\"canvas-source\");\n    const target = document.getElementById(\"canvas-target\");\n    target.width = source.width;\n    target.height = source.height;\n\n    const resizedWidth = source.width - 2;\n    const resizedHeight = source.height;\n    resizeImage(\n      { source, target },\n      source.width,\n      source.height,\n      resizedWidth,\n      resizedHeight\n    );\n\n    dispatch({ type: \"RESIZE\" });\n  }\n\n  const DEMO_IMAGE = \"https://source.unsplash.com/yRjLihK35Yw/800x450\";\n  return (\n    <div className=\"App flex flex-col h-screen\">\n      <div className=\"flex-grow\">\n        <div className=\"flex items-center\tjustify-center h-full\">\n          <DisplayImages src={DEMO_IMAGE} currentDisplay={state.display} />\n        </div>\n      </div>\n\n      <div className=\"border-t border-gray-150 p-10 bg-white\">\n        <Controls handleResize={handleResize} />\n      </div>\n    </div>\n  );\n}\n\nfunction documentReady(fn) {\n  if (document.readyState != \"loading\") {\n    fn();\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  }\n}\n\ndocumentReady(() => {\n  ReactDOM.render(<App />, document.getElementById(\"app\"));\n});\n\nif (module.hot) {\n  // Disable HMR in development\n  module.hot.decline();\n}\n","export function resizeImage(\n  canvasElements,\n  originalWidth,\n  originalHeight,\n  resizedWidth,\n  resizedHeight\n) {\n  const { source, target } = canvasElements;\n\n  function wasmResize(...args) {\n    import(\"./pkg\")\n      .then((module) => module.resize(...args))\n      .catch(console.error);\n  }\n\n  // Instead of overwriting the original canvas data, we'll transfer the\n  // resized image data onto a second, blank canvas.\n  const ctxSource = source.getContext(\"2d\");\n  const ctxTarget = target.getContext(\"2d\");\n\n  // TODO: Use resizedWidth and resizedHeight\n  wasmResize(\n    ctxSource,\n    ctxTarget,\n    originalWidth,\n    originalHeight,\n    resizedWidth,\n    resizedHeight\n  );\n}\n"],"sourceRoot":""}